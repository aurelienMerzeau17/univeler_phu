@using phu.Models;
@model phu.Models.evenement

@{
    ViewBag.Title = "Edition";
}
@{
    phu_bddEntities db = new phu_bddEntities();
    int isAdmin = (from i in db.UserProfile
                   where i.UserName == WebSecurity.CurrentUserName
                   select i.user.FirstOrDefault().admin).FirstOrDefault();
}
@if (Request.IsAuthenticated && isAdmin == 1)
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Editer un Évenement</legend>
            @Html.HiddenFor(model => model.event_id)
            <div class="editor-label">
                @Html.Label("Nom", new { @class = "labelValeurs" })
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.name)
                @Html.ValidationMessageFor(model => model.name)
            </div>

            <div class="editor-label">
                @Html.Label("Date Prevue", new { @class = "labelValeurs" })
            </div>
            <div class="editor-field">
                @Html.TextBox("txtDatePrevue", Model.date_event, new { @class = "txtDate" })
                @Html.ValidationMessageFor(model => model.date_event)
            </div>

            <div class="editor-label">
                @Html.Label("Adresse", new { @class = "labelValeurs" })
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.localisation.address)
                @Html.ValidationMessageFor(model => model.localisation.address)
            </div>
            <div class="editor-label">
                @Html.Label("Code Postal", new { @class = "labelValeurs" })
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.localisation.cp)
                @Html.ValidationMessageFor(model => model.localisation.cp)
            </div>
            <div class="editor-label">
                @Html.Label("Ville", new { @class = "labelValeurs" })
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.localisation.city)
                @Html.ValidationMessageFor(model => model.localisation.city)
            </div>


            <div class="editor-label">
                @Html.Label("Nombre maximum de Participants", new { @class = "labelValeurs" })
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.max_people)
                @Html.ValidationMessageFor(model => model.max_people)
            </div>

            <div class="editor-label">
                @Html.Label("Description", new { @class = "labelValeurs" })
            </div>
            <div id="DivTinyMCE">
                <textarea name="contentDescription" style="height:250px">@Model.description</textarea>
            </div>

            <p>
                <input type="submit" value="Sauvegarder" />
            </p>
        </fieldset>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <script type="text/javascript">
        tinymce.init({
            selector: "textarea",
            theme: "modern",
            toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | forecolor "
        });
    </script>
    <script type="text/javascript">
        $(function () {
            $('.txtDate').datetimepicker();
        });
    </script>
}
else
{
    Response.Redirect("~/Admin/Login");
}